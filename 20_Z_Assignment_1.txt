Learning Objectives:-
Create the `auth-svc` service
Create the `data-svc` service


Problem Statement:-
Your company has just deployed two components of a web application to a Kubernetes cluster, using deployments with multiple replicas. They need a way to provide dynamic network access to these replicas so that there will be uninterrupted access to the components whenever replicas are created, removed, and replaced. One deployment is called auth-deployment, an authentication provider that needs to be accessible from outside the cluster. The other is called data-deployment, and it is a component designed to be accessed only by other pods within the cluster.

The team wants you to create two services to expose these two components. Examine the two deployments, and create two services that meet the following criteria:

auth-svc
The service name is auth-svc.
The service exposes the pod replicas managed by the deployment named auth-deployment.
The service listens on port 8080 and its targetPort matches the port exposed by the pods.
The service type is NodePort.
data-svc
The service name is data-svc.
The service exposes the pod replicas managed by the deployment named data-deployment.
The service listens on port 8080 and its targetPort matches the port exposed by the pods.
The service type is ClusterIP.
Note: All work should be done in the default namespace.

-----------------------------------------------------------------------------------------------------------------------------------------------------------

vi auth-deployment.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: webapp
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-ctr
        image: nginx:1.7.1
	ports:
        - name: http-port
          containerPort: 80
		
vi auth-svc.yml

apiVersion: v1
kind: Service
metadata:
  name: auth-svc
  namespace: webapp
spec:
  type: NodePort
  selector:
    app: my-app
  ports:
  - name: http
	port: 8080
        targetPort: 80
	nodePort: 30036
	protocol: TCP
	

vi data-deployment.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-deployment
  labels:
    app: my-app
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-ctr
        image: nginx:1.7.9
        ports:
        - name: http-port
          containerPort: 80 


vi data-svc.yml

apiVersion: v1
kind: Service
metadata:
  name: data-svc
  namespace: webapp
spec:
  type: ClusterIP
  selector:
    app: my-app
  ports:
  - name: http
	port: 8080

master $ kubectl get po
NAME                               READY   STATUS    RESTARTS   AGE
auth-deployment-85d7f5f984-2pqlp   1/1     Running   0          13m
auth-deployment-85d7f5f984-bmlkx   1/1     Running   0          13m
auth-deployment-85d7f5f984-knk2l   1/1     Running   0          13m
auth-deployment-85d7f5f984-nhrfd   1/1     Running   0          13m
auth-deployment-85d7f5f984-p5w8j   1/1     Running   0          13m
data-deployment-85d7f5f984-5q6xn   1/1     Running   0          11m
data-deployment-85d7f5f984-87v86   1/1     Running   0          11m
data-deployment-85d7f5f984-pkp2f   1/1     Running   0          11m
data-deployment-85d7f5f984-txhkg   1/1     Running   0          11m
data-deployment-85d7f5f984-vcdtc   1/1     Running   0          11m

master $ kubectl get svc
NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
auth-svc     NodePort    10.100.124.131   <none>        80:30036/TCP   8m20s
data-svc     ClusterIP   10.97.69.3       <none>        80/TCP         3m17s
kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP        19m

master $ kubectl describe svc
Name:                     auth-svc
Namespace:                default
Labels:                   <none>
Annotations:              <none>
Selector:                 app=my-app
Type:                     NodePort
IP:                       10.100.124.131
Port:                     http  80/TCP
TargetPort:               80/TCP
NodePort:                 http  30036/TCP
Endpoints:                10.36.0.0:80,10.36.0.1:80,10.36.0.2:80 + 7 more...
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>


Name:              data-svc
Namespace:         default
Labels:            <none>
Annotations:       <none>
Selector:          app=my-app
Type:              ClusterIP
IP:                10.97.69.3
Port:              http  80/TCP
TargetPort:        80/TCP
Endpoints:         10.36.0.0:80,10.36.0.1:80,10.36.0.2:80 + 7 more...
Session Affinity:  None
Events:            <none>


Name:              kubernetes
Namespace:         default
Labels:            component=apiserver
                   provider=kubernetes
Annotations:       <none>
Selector:          <none>
Type:              ClusterIP
IP:                10.96.0.1
Port:              https  443/TCP
TargetPort:        6443/TCP
Endpoints:         172.17.0.12:6443
Session Affinity:  None
Events:            <none>
    targetPort: 80
	protocol: TCP